/* -- WordPress Core Classes -- */
/* =WordPress Core
-------------------------------------------------------------- */
.alignnone {
    margin: 0.5em 1em 1em 0;
}

.aligncenter,
div.aligncenter {
    display: block;
    margin: 0.5em auto 0.5em auto;
}

.alignright {
    float:right;
    margin: 0.5em 0 1em 1em;
}

.alignleft {
    float: left;
    margin: 0.5em 1em 1em 0;
}

a img.alignright {
    float: right;
    margin: 0.5em 0 1em 1em;
}

a img.alignnone {
    margin: 0.5em 1em 1em 0;
}

a img.alignleft {
    float: left;
    margin: 0.5em 1em 1em 0;
}

a img.aligncenter {
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.wp-caption {
    background: $white;
    border: 1px solid #f0f0f0;
    max-width: 96%; /* Image does not overflow the content area */
    padding: 0.5em 0.5em .875em;
    text-align: center;
}

.wp-caption.alignnone {
    margin: 0.5em 1em 1em 0;
}

.wp-caption.alignleft {
    margin: 0.5em 1em 1em 0;
}

.wp-caption.alignright {
    margin: 0.5em 0 1em 1em;
}

.wp-caption img {
    border: 0 none;
    height: auto;
    margin: 0;
    max-width: 98.5%;
    padding: 0;
    width: auto;
}

.wp-caption p.wp-caption-text {
    font-size: 80%;
    line-height: auto;
    margin: 0;
    padding: 0 .5em .5em;
}

/* Text meant only for screen readers. */
.screen-reader-text {
	clip: rect(1px, 1px, 1px, 1px);
	position: absolute !important;
        white-space: nowrap;
	height: 1px;
	width: 1px;
	overflow: hidden;
}

.screen-reader-text:focus {
	background-color: $body-background;
	border-radius: 3px;
	box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.6);
	clip: auto !important;
	color: $body-font-color;
	display: block;
	font-size: 14px;
	font-size: 0.875rem;
	font-weight: bold;
	height: auto;
	left: 5px;
	line-height: normal;
	padding: 1em;
	text-decoration: none;
	top: 5px;
	width: auto;
	z-index: 100000; /* Above WP toolbar. */
}



// Responsive Video Embed from ACF
    .embed-container {
    		position: relative;
    		padding-bottom: 56.25%;
    		height: 0;
    		overflow: hidden;
    		max-width: 100%;
    		height: auto;
    	}

    	.embed-container iframe,
    	.embed-container object,
    	.embed-container embed {
    		position: absolute;
    		top: 0;
    		left: 0;
    		width: 100%;
    		height: 100%;
    	}

/* -- Fonts -- */

@import '../fonts/foundation-icons.css';
@import '../fonts/stylesheet.css';

/* -- Metaslider Plugin --*/

.metaslider ul.slides {
  margin:0;
  list-style: none;
}



// Truncate Text
.truncate {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin truncate {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

ul.multi {
	 @include breakpoint(small) { -webkit-column-count: 1; /* Chrome, Safari, Opera */
    -moz-column-count: 1; /* Firefox */
    column-count: 1;}
	 @include breakpoint(medium) { 
	-webkit-column-count: 2; /* Chrome, Safari, Opera */
    -moz-column-count: 2; /* Firefox */
    column-count: 2;}
	 @include breakpoint(large) { 
		 -webkit-column-count: 2; /* Chrome, Safari, Opera */
    -moz-column-count: 2; /* Firefox */
    column-count: 2;}
	
}

.acf-map {
	width: 100%;
	height: 400px;
	border: #ccc solid 1px;
	margin: 20px 0;
}

/* fixes potential theme css conflict */
.acf-map img {
   max-width: inherit !important;
}

// Button Animations
button.animate {


  // Using inset box-shadow instead of border for sizing simplicity
  box-shadow: inset 0 0 0 2px $light-blue;

  font-size: inherit;
  font-weight: 700;

  // Required, since we're setting absolute on pseudo-elements
  position: relative;
  vertical-align: middle;

  &::before,
  &::after {
    box-sizing: inherit;
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
  }
}

.draw-blue {
    transition: color 0.25s;

  &::before,
  &::after {
    // Set border to invisible, so we don't see a 4px border on a 0x0 element before the transition starts
    border: 2px solid transparent;
    width: 0;
    height: 0;
  }

  // This covers the top & right borders (expands right, then down)
  &::before {
    top: 0;
    left: 0;
  }

  // And this the bottom & left borders (expands left, then up)
  &::after {
    bottom: 0;
    right: 0;
  }

  &:hover {
    color: $dark-blue;
  }

  // Hover styles
  &:hover::before,
  &:hover::after {
    width: 100%;
    height: 100%;
  }

  &:hover::before {
    border-top-color: $dark-blue; // Make borders visible
    border-right-color: $dark-blue;
    transition:
      width 0.25s ease-out, // Width expands first
      height 0.25s ease-out 0.25s; // And then height
  }

  &:hover::after {
    border-bottom-color: $dark-blue; // Make borders visible
    border-left-color: $dark-blue;
    transition:
      border-color 0s ease-out 0.5s, // Wait for ::before to finish before showing border
      width 0.25s ease-out 0.5s, // And then exanding width
      height 0.25s ease-out 0.75s; // And finally height
  }
}
